openapi: 3.0.0
info:
  title: Template Rule
  description: Template oas 3.0 API.
  version: 0.0.0
  contact:
    name: Contact name
    email: emailContact@gmail.com
    url: 'https://www.axpe.com'
tags:
  - name: ResourceNames
    description: Description tag.
servers:
  - url: '{protocol}://{host}:{port}/{basePath}/{majorVersion}'
    variables:
      protocol:
        description: Protocol.
        default: https
      host:
        description: Host.
        default: www.axpe.com
      port:
        description: Port.
        default: '443'
      basePath:
        description: BasePath.
        default: template-rule
      majorVersion:
        description: MajorVersion.
        default: v0
paths:
  /resource-names:
    parameters:
      - $ref: '#/components/parameters/XRequestIdHeader'
      - $ref: '#/components/parameters/AcceptLanguageHeader'
    get:
      tags:
        - ResourceNames
      operationId: getResourceNames
      summary: List of resources.
      description: Retrieves a list of ...
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
        - $ref: '#/components/parameters/sort'
      responses:
        '200':
          $ref: '#/components/responses/GetAllResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '406':
          $ref: '#/components/responses/406'
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '423':
          $ref: '#/components/responses/423'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
        default:
          $ref: '#/components/responses/errorDefault'
    post:
      tags:
        - ResourceNames
      operationId: postResourceNames
      summary: Creates a resource.
      description: Creates a resource based on.
      requestBody:
        $ref: '#/components/requestBodies/PostRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '405':
          $ref: '#/components/responses/405'
        '406':
          $ref: '#/components/responses/406'
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '423':
          $ref: '#/components/responses/423'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
        default:
          $ref: '#/components/responses/errorDefault'
  '/resource-names/{resourceNameId}':
    get:
      tags:
        - ResourceNames
      operationId: getResourceNamesResourceNameId
      summary: Get a resource name details
      description: Gets a resource based on an account ID.
      parameters:
        - $ref: '#/components/parameters/pathResourceNameId'
      responses:
        '200':
          $ref: '#/components/responses/GetDetailResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '406':
          $ref: '#/components/responses/406'
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '423':
          $ref: '#/components/responses/423'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
        default:
          $ref: '#/components/responses/errorDefault'
    put:
      tags:
        - ResourceNames
      operationId: putResourceNamesResourceNameId
      summary: Updates a resource.
      description: Updates a resource based..
      parameters:
        - $ref: '#/components/parameters/pathResourceNameId'
      requestBody:
        $ref: '#/components/requestBodies/PutRequestBody'
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '423':
          $ref: '#/components/responses/423'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
        default:
          $ref: '#/components/responses/errorDefault'
    patch:
      tags:
        - ResourceNames
      operationId: patchResourceNamesResourceNameId
      summary: Updates some attributes of a resource name.
      description: Updates some attributes of  resource name based on.....
      parameters:
        - $ref: '#/components/parameters/pathResourceNameId'
      requestBody:
        $ref: '#/components/requestBodies/PatchRequestBody'
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '415':
          $ref: '#/components/responses/415'
        '423':
          $ref: '#/components/responses/423'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
        default:
          $ref: '#/components/responses/errorDefault'
    delete:
      tags:
        - ResourceNames
      operationId: deleteResourceNamesResourceNameId
      summary: Delete an resource
      description: Delete a resource based on in ID.
      parameters:
        - $ref: '#/components/parameters/pathResourceNameId'
      responses:
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '406':
          $ref: '#/components/responses/406'
        '409':
          $ref: '#/components/responses/409'
        '413':
          $ref: '#/components/responses/413'
        '414':
          $ref: '#/components/responses/414'
        '422':
          $ref: '#/components/responses/422'
        '423':
          $ref: '#/components/responses/423'
        '429':
          $ref: '#/components/responses/429'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '502':
          $ref: '#/components/responses/502'
        '503':
          $ref: '#/components/responses/503'
        '504':
          $ref: '#/components/responses/504'
        default:
          $ref: '#/components/responses/errorDefault'
components:
  parameters:
    pathResourceNameId:
      name: resourceNameId
      in: path
      required: true
      description: Path param used to define the resource identifier.
      schema:
        type: string
        format: uuid
        minLength: 1
        maxLength: 700
      example: 12345678-1234-5678-1234-567812345678
    limit:
      in: query
      name: limit
      required: false
      description: 'Number of rows to be included in the response.The default value is 0, in that case all rows are retrieved.In case of performance issues, a limit of 1.000 rows will be applied.'
      schema:
        type: integer
        format: int32
        maximum: 2048
        minimum: 0
      example: 50
    offset:
      in: query
      name: offset
      required: false
      description: 'Last row retrieved in a previous response, in case of more rows than requested existed, and needed a new request for the next rows from that on (included).'
      schema:
        type: integer
        format: int32
        maximum: 2048
        minimum: 0
      example: 2
    sort:
      name: sort
      in: query
      required: false
      description: |-
        Sorting order for the retrieved accounts.
        The possible values are:
          - +productName = ascending by productName
          - -productName = descending by productName
        If the value is omitted, the default value is '-opening_date_time'.
      schema:
        type: string
        maxLength: 70
        minLength: 0
        pattern: '^[a-zA-Z0-9_-]*$'
      example: '-opening_date_time'
    AcceptLanguageHeader:
      name: Accept-Language
      description: ISO code of the language that the client accepts in response from the server.
      in: header
      required: true
      schema:
        type: string
        pattern: '^[a-z]{2}-[A-Z]{2}$'
        minLength: 1
        maxLength: 5
        example: en-EN
    XRequestIdHeader:
      name: X-Request-ID
      description: Request ID.
      in: header
      required: true
      schema:
        type: string
        pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
        format: uuid
        minLength: 1
        maxLength: 100
        example: 54b9c11c-9162-45a1-a352-0d95734cd079
  headers:
    XRequestIdHeader:
      description: Request ID.
      schema:
        type: string
        pattern: '^[0-9a-fA-F]{8}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{4}\-[0-9a-fA-F]{12}$'
        format: uuid
        minLength: 1
        maxLength: 40
        example: 54b9c11c-9162-45a1-a352-0d95734cd079
    Location:
      description: Gives an URL to be redirected.
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 999999
        example: /resourceName/54475
  schemas:
    HttpUrl:
      title: HttpUrl
      type: string
      description: Type used for URL addresses.
      pattern: '^http[s]{0,1}://[a-zA-Z./]+'
      maxLength: 200
      example: 'https://www.axpe.com'
    ErrorMessage:
      title: ErrorMessage
      type: object
      description: Object returned when an error happens.
      properties:
        messages:
          type: array
          maxItems: 5
          description: List of error messages.
          items:
            type: object
            description: Information of the error produced.
            properties:
              code:
                type: string
                description: Field which briefly defines the problem.
                minLength: 1
                maxLength: 50
              message:
                type: string
                description: Message which describes the main issue.
                minLength: 1
                maxLength: 500
              type:
                type: string
                description: Describes the type of message displayed. CRITICAL- error that prevents the operation of the entire application. FATAL - error that prevents the operation of a specific functionality. ERROR - error that does not affect more features. WARNING - application works but a warning has been generated. INFO - operative info message.
                enum:
                  - CRITICAL
                  - FATAL
                  - ERROR
                  - WARNING
                  - INFO
              description:
                type: string
                description: Describes other details of the error.
                minLength: 1
                maxLength: 500
            required:
              - code
              - message
              - type
    Pagination:
      title: Pagination
      type: object
      description: Object which contains the pagination data in a Get method.
      properties:
        offset:
          example: 1
          description: 'Record number from which you want to receive the number of records indicated in the limit. If it is indicated at the input, it will be the value of the query. If it is not indicated at the input, since the query is on the first page, its value will be 0.'
          type: integer
          format: int32
          minimum: 0
          maximum: 255
        limit:
          example: 12
          description: 'Number of records returned per page. If specified on entry, it will be the value of the query, otherwise it will be the default value set by the service.'
          type: integer
          format: int32
          minimum: 0
          maximum: 255
        pageNumber:
          example: 1
          description: Page number we are on.
          type: integer
          format: int32
          minimum: 0
          maximum: 255
        totalPages:
          example: 2
          description: Number of pages for the indicated limit.
          type: integer
          format: int32
          minimum: 0
          maximum: 255
        totalElements:
          example: 4
          description: Total number of elements in the list.
          type: integer
          format: int64
          minimum: 0
          maximum: 255
        links:
          description: List of navigation links to different pages.
          type: object
          required:
            - self
            - next
          properties:
            first:
              description: 'Link to the first page of the list. The exact value depends on the data to be accessed.The exact content of the page depends on the input parameters provided in the request, such as the offset.'
              type: object
              properties:
                href:
                  $ref: '#/components/schemas/HttpUrl'
              example:
                first: /accounts?_offset=0
              maxLength: 255
              pattern: '^\/[\w-]+(\/[\w-]+)*\?(_[a-zA-Z]+=\d*)(&_[a-zA-Z]+=\d*)*'
            self:
              description: 'Link to the first page of the list. The exact value depends on the data to be accessed.The exact content of the page depends on the input parameters provided in the request, such as the offset.'
              type: object
              properties:
                href:
                  $ref: '#/components/schemas/HttpUrl'
              example:
                self: /accounts?_offset=10&_limit=10
              maxLength: 255
              pattern: '^\/[\w-]+(\/[\w-]+)*\?(_[a-zA-Z]+=\d*)(&_[a-zA-Z]+=\d*)*'
            prev:
              description: |-
                Link to the previous page of the list.
                The exact value depends on the data to be accessed.
                The exact content of the page depends on the input parameters provided in the request, such as the offset.
              type: object
              properties:
                href:
                  $ref: '#/components/schemas/HttpUrl'
              example:
                prev: /accounts?_offset=10&_limit=10
              maxLength: 255
              pattern: '^\/[\w-]+(\/[\w-]+)*\?(_[a-zA-Z]+=\d*)(&_[a-zA-Z]+=\d*)*'
            next:
              description: |-
                Link to the next page of the list.
                The exact value depends on the data to be accessed.
                The exact content of the page depends on the input parameters provided in the request, such as the offset.
              type: object
              properties:
                href:
                  $ref: '#/components/schemas/HttpUrl'
              example:
                next: /accounts?_offset=30&_limit=10
              maxLength: 255
              pattern: '^\/[\w-]+(\/[\w-]+)*\?(_[a-zA-Z]+=\d*)(&_[a-zA-Z]+=\d*)*'
            last:
              description: |-
                Link to the last page of the list.
                The exact value depends on the data to be accessed.
                The exact content of the page depends on the input parameters provided in the request, such as the offset.
              type: object
              properties:
                href:
                  $ref: '#/components/schemas/HttpUrl'
              example:
                last: /accounts?_offset=40&_limit=10
              maxLength: 255
              pattern: '^\/[\w-]+(\/[\w-]+)*\?(_[a-zA-Z]+=\d*)(&_[a-zA-Z]+=\d*)*'
          additionalProperties: false
    ResourceResponse:
      title: ResourceResponse
      description: List of resources.
      type: object
      additionalProperties: false
      properties:
        data:
          description: Object which encapsulates the data returned by a Get method.
          type: array
          maxItems: 100
          items:
            allOf:
              - $ref: '#/components/schemas/ResourceId'
              - $ref: '#/components/schemas/Resource'
        pagination:
          $ref: '#/components/schemas/Pagination'
    PersonaAlta:
      title: PersonaAlta
      description: Objeto que encapsula toda la información que está relacionada con la persona que está dada de alta en el sistema.
      type: object
      properties:
        estudios:
          type: string
          description: 'Se indicarán los reconocimientos de la formación educativa que posee la persona tras realizar los estudios, examenes y pruebas pertinentes.'
          minLength: 1
          maxLength: 500
        codigoActividad:
          type: string
          description: Código de la actividad realizada.
          minLength: 1
          maxLength: 50
        ocupación:
          type: string
          description: Ocupación de la persona que se ha dado de alta en el sistema.
          minLength: 1
          maxLength: 500
        trabajo:
          type: boolean
          description: Indicar si la persona que se ha dado de alta está trabajando actualmente o no. ( True/False )
        empresa:
          type: string
          description: Nombre de la empresa en la que trabaja.
          minLength: 1
          maxLength: 60
        sector:
          type: string
          description: Sector en el que trabaja la persona.
          minLength: 1
          maxLength: 100
        codigoCNAE:
          type: string
          description: Código de la Clasificación Nacional de Actividades Económicas.
          minLength: 1
          maxLength: 4
        codigoIng:
          type: string
          description: Codigo Ing
        personaPublica:
          type: boolean
          description: Indicar si la persona es una persona politicamente expuesta o no. (True/False)
        funcionario:
          type: boolean
          description: Indicar si la persona es un funcionario o un empleado del sector público. (True/False)
        contratoLaboral:
          type: string
          description: Tipo de contrato laboral
          enum:
            - INDEFINIDO
            - TEMPORAL
      x-examples: {}
    ResourceData:
      title: ResourceData
      description: Resource encapsulated on a data object.
      type: object
      additionalProperties: false
      properties:
        data:
          description: Details from one Resource.
          type: object
          allOf:
            - $ref: '#/components/schemas/ResourceId'
            - $ref: '#/components/schemas/Resource'
    Resource:
      title: Resource
      description: Resource encapsulated on a object.
      type: object
      properties:
        atributeString:
          example: atributeString
          type: string
          description: Attribute description.
          minLength: 1
          maxLength: 200
        atributeLong:
          example: 1
          type: integer
          format: int64
          minimum: 1
          maximum: 999999
          description: Attribute description.
        atributeDate:
          type: string
          format: date-time
          description: Attribute description.
          maxLength: 30
          example: '2016-07-28 09:10:13'
    ResourceId:
      title: Resource id
      description: Identifier of resource.
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          minimum: 1
          maximum: 999999
          example: 23
  examples:
    example-errorDefault:
      value:
        errors:
          - code: INTERNAL_SERVER_ERROR
            type: FATAL
            message: Error message
            description: Error description.
    example-error400:
      value:
        errors:
          - code: BAD_REQUEST
            type: FATAL
            message: Bad Request
            description: The request is incorrect because the selected parameters are wrong or a functional error has occurred.
    example-error401:
      value:
        errors:
          - code: UNAUTHORIZED
            message: Unauthorized
            type: ERROR
            description: The call needs some kind of authorization either expired or not reported.
    example-error403:
      value:
        errors:
          - code: FORBIDDEN
            type: FATAL
            message: Forbidden
            description: You do not have permissions to operate with this invocation.
    example-error404:
      value:
        errors:
          - code: NOT_FOUND
            type: FATAL
            message: Not Found
            description: Resource not found.
    example-error405:
      value:
        errors:
          - code: METHOD_NOT_ALLOWED
            type: ERROR
            message: Method not allowed
            description: The request method is known by the server but is not supported by the target resource.
    example-error406:
      value:
        errors:
          - code: NOT_ACCEPTABLE
            type: FATAL
            message: Not Acceptable
            description: The format indicated in the "Accept" header of the request is not supported by the destination server.
    example-error409:
      value:
        errors:
          - code: CONFLICT
            type: FATAL
            message: Conflict
            description: The request has not been completed due to a conflict with the current status of the resource.
    example-error413:
      value:
        errors:
          - code: PAYLOAD_TOO_LARGE
            type: FATAL
            message: Payload Too Large
            description: The size of the client request has exceeded the server's file size limit.
    example-error414:
      value:
        errors:
          - code: URI_TOO_LONG
            type: FATAL
            message: URI Too Long
            description: The URL is too long for the server to process it.
    example-error415:
      value:
        errors:
          - code: UNSUPPORTED_MEDIA_TYPE
            type: FATAL
            message: Unsupported Media Type
            description: 'Incorrect format of the response, does not match the one indicated in the "Content-Type" header.'
    example-error422:
      value:
        errors:
          - code: UNPROCESSABLE_ENTITY
            type: FATAL
            message: Unprocessable Entity
            description: 'The structure of the request is correct, but it is not semantically correct.'
    example-error423:
      value:
        errors:
          - code: LOCKED
            type: FATAL
            message: Unprocessable Entity
            description: The resource you are trying to access is blocked.
    example-error429:
      value:
        errors:
          - code: TOO_MANY_REQUESTS
            type: ERROR
            message: Too Many Requests
            description: Too many requests in a given period of time and limit has been exceeded.
    example-error500:
      value:
        errors:
          - code: INTERNAL_SERVER_ERROR
            type: FATAL
            message: Internal server error
            description: 'Unexpected error from the server, it has no way to respond to the invocation.'
    example-error501:
      value:
        errors:
          - code: NOT_IMPLEMENTED
            type: ERROR
            message: Not implemented
            description: The functionality is not supported by the service.
    example-error502:
      value:
        errors:
          - code: BAD_GATEWAY
            type: ERROR
            message: Bad Gateway
            description: 'Indicates that the server, while acting as a gateway or proxy, received an invalid response from an inbound service that it accessed while attempting to fulfill the request.'
    example-error503:
      value:
        errors:
          - code: SERVICE_UNAVAILABLE
            type: ERROR
            message: Service unavailable
            description: 'Indicates that the server is unavailable to perform the request because it is overloaded or maintenance is being performed, and that it will probably be relieved after some time.'
    example-error504:
      value:
        errors:
          - code: GATEWAY_TIMEOUT
            type: ERROR
            message: Gateway timeout
            description: 'Indicates that the server, while acting as a gateway or proxy, did not receive a timely response from an upstream server it needed to access to complete the request.'
  requestBodies:
    PostRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Resource'
          example:
            data:
              value:
                resourceId: 5
                atributeString: BANK
                atributeDate: '2021-04-25T20:21:46.37'
                atributeLong: 54545
    PutRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Resource'
          example:
            data:
              value:
                atributeString: BANK
                atributeDate: '2021-04-25T20:21:46.37'
                atributeLong: 54545
    PatchRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Resource'
          example:
            data:
              value:
                atributeString: BANK
  responses:
    '201':
      description: Created.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
        Location:
          $ref: '#/components/headers/Location'
    '204':
      description: No Content.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
    '400':
      description: Bad Request.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err400Example:
              $ref: '#/components/examples/example-error400'
    '401':
      description: Unauthorized.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err401Example:
              $ref: '#/components/examples/example-error401'
    '403':
      description: Forbidden.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err403Example:
              $ref: '#/components/examples/example-error403'
    '404':
      description: Not Found.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err404Example:
              $ref: '#/components/examples/example-error404'
    '405':
      description: Method Not Allowed.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err405Example:
              $ref: '#/components/examples/example-error405'
    '406':
      description: Not Acceptable.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err406Example:
              $ref: '#/components/examples/example-error406'
    '409':
      description: Conflict.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err409Example:
              $ref: '#/components/examples/example-error409'
    '413':
      description: Payload Too Large.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err413Example:
              $ref: '#/components/examples/example-error413'
    '414':
      description: URI Too Long.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err414Example:
              $ref: '#/components/examples/example-error414'
    '415':
      description: Unsupported Media Type.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err415Example:
              $ref: '#/components/examples/example-error415'
    '422':
      description: Unprocessable Entity.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err422Example:
              $ref: '#/components/examples/example-error422'
    '423':
      description: Locked.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err423Example:
              $ref: '#/components/examples/example-error423'
    '429':
      description: Too Many Requests.
      headers:
        Retry-After:
          description: The number of seconds to wait before allowing a follow-up request.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err429Example:
              $ref: '#/components/examples/example-error429'
    '500':
      description: Internal Server Error.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err500Example:
              $ref: '#/components/examples/example-error500'
    '501':
      description: Not Implemented.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err501Example:
              $ref: '#/components/examples/example-error501'
    '502':
      description: Bad Gateway.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err502Example:
              $ref: '#/components/examples/example-error502'
    '503':
      description: Service Unavailable.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err503Example:
              $ref: '#/components/examples/example-error503'
    '504':
      description: Gateway Timeout.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            err504Example:
              $ref: '#/components/examples/example-error504'
    GetAllResponse:
      description: OK.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceResponse'
          examples:
            example-getResources:
              value:
                data:
                  - resourceId: 1
                    atributeString: RETAIL_BANKING
                    atributeDate: '2021-04-25T20:21:46.37'
                    atributeLong: 515
                  - resourceId: 18
                    atributeString: RETAIL_BANKING
                    atributeDate: '2021-04-25T20:21:46.37'
                    atributeLong: 44
                  - resourceId: 85
                    atributeString: RETAIL_BANKING
                    atributeDate: '2021-04-25T20:21:46.37'
                    atributeLong: 8945
                pagination:
                  offset: 0
                  limit: 2
                  pageNumber: 1
                  totalPages: 2
                  totalElements: 8
                  links:
                    first:
                      href: 'https://host:port/basepath/MajorVersion/resourceName?offset=10'
                    prev:
                      href: 'https://host:port/basepath/MajorVersion/resourceName?offset=10&limit=10'
                    self:
                      href: 'https://host:port/basepath/MajorVersion/resourceName?offset=10&limit=10'
                    next:
                      href: 'https://host:port/basepath/MajorVersion/resourceName?offset=10&limit=10'
                    last:
                      href: 'https://host:port/basepath/MajorVersion/resourceName?offset=10&limit=10'
    GetDetailResponse:
      description: OK.
      headers:
        RateLimit-Limit:
          description: The number of allowed requests in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        RateLimit-Reset:
          description: The number of seconds left in the current period.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 999999
            example: 100
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceData'
          examples:
            example-getResources:
              value:
                data:
                  resourceId: 1
                  atributeString: RETAIL_BANKING
                  atributeDate: '2021-04-25T20:21:46.37'
                  atributeLong: 515444
    errorDefault:
      description: Default error.
      headers:
        X-Request-ID:
          $ref: '#/components/headers/XRequestIdHeader'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
          examples:
            errDefaultExample:
              $ref: '#/components/examples/example-errorDefault'
  securitySchemes:
    BearerAuth:
      description: Lo que sea añadiendo  -> RFC8725.
      type: http
      scheme: bearer
      bearerFormat: JWT
